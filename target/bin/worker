#!/bin/sh
# ----------------------------------------------------------------------------
#  Copyright 2001-2006 The Apache Software Foundation.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
# ----------------------------------------------------------------------------

#   Copyright (c) 2001-2002 The Apache Software Foundation.  All rights
#   reserved.

BASEDIR=`dirname $0`/..
BASEDIR=`(cd "$BASEDIR"; pwd)`



# OS specific support.  $var _must_ be set to either true or false.
cygwin=false;
darwin=false;
case "`uname`" in
  CYGWIN*) cygwin=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ] ; then
             JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
           fi
           ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# For Cygwin, ensure paths are in UNIX format before anything is touched
if $cygwin ; then
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly."
  echo "  We cannot execute $JAVACMD"
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/repo
fi

CLASSPATH=$CLASSPATH_PREFIX:"$BASEDIR"/etc:"$REPO"/org/apache/logging/log4j/log4j-core/2.11.2/log4j-core-2.11.2.jar:"$REPO"/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:"$REPO"/javax/json/javax.json-api/1.1.4/javax.json-api-1.1.4.jar:"$REPO"/org/springframework/boot/spring-boot-starter-data-jpa/2.0.5.RELEASE/spring-boot-starter-data-jpa-2.0.5.RELEASE.jar:"$REPO"/org/springframework/boot/spring-boot-starter/2.0.5.RELEASE/spring-boot-starter-2.0.5.RELEASE.jar:"$REPO"/org/springframework/boot/spring-boot/2.0.5.RELEASE/spring-boot-2.0.5.RELEASE.jar:"$REPO"/org/springframework/boot/spring-boot-autoconfigure/2.0.5.RELEASE/spring-boot-autoconfigure-2.0.5.RELEASE.jar:"$REPO"/org/springframework/boot/spring-boot-starter-logging/2.0.5.RELEASE/spring-boot-starter-logging-2.0.5.RELEASE.jar:"$REPO"/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:"$REPO"/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:"$REPO"/org/apache/logging/log4j/log4j-to-slf4j/2.10.0/log4j-to-slf4j-2.10.0.jar:"$REPO"/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:"$REPO"/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:"$REPO"/org/springframework/spring-core/5.0.9.RELEASE/spring-core-5.0.9.RELEASE.jar:"$REPO"/org/springframework/spring-jcl/5.0.9.RELEASE/spring-jcl-5.0.9.RELEASE.jar:"$REPO"/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:"$REPO"/org/springframework/boot/spring-boot-starter-aop/2.0.5.RELEASE/spring-boot-starter-aop-2.0.5.RELEASE.jar:"$REPO"/org/springframework/spring-aop/5.0.9.RELEASE/spring-aop-5.0.9.RELEASE.jar:"$REPO"/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:"$REPO"/org/springframework/boot/spring-boot-starter-jdbc/2.0.5.RELEASE/spring-boot-starter-jdbc-2.0.5.RELEASE.jar:"$REPO"/com/zaxxer/HikariCP/2.7.9/HikariCP-2.7.9.jar:"$REPO"/org/springframework/spring-jdbc/5.0.9.RELEASE/spring-jdbc-5.0.9.RELEASE.jar:"$REPO"/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:"$REPO"/org/hibernate/hibernate-core/5.2.17.Final/hibernate-core-5.2.17.Final.jar:"$REPO"/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:"$REPO"/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.2.Final/hibernate-jpa-2.1-api-1.0.2.Final.jar:"$REPO"/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:"$REPO"/antlr/antlr/2.7.7/antlr-2.7.7.jar:"$REPO"/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:"$REPO"/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:"$REPO"/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:"$REPO"/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:"$REPO"/org/springframework/data/spring-data-jpa/2.0.10.RELEASE/spring-data-jpa-2.0.10.RELEASE.jar:"$REPO"/org/springframework/data/spring-data-commons/2.0.10.RELEASE/spring-data-commons-2.0.10.RELEASE.jar:"$REPO"/org/springframework/spring-orm/5.0.9.RELEASE/spring-orm-5.0.9.RELEASE.jar:"$REPO"/org/springframework/spring-context/5.0.9.RELEASE/spring-context-5.0.9.RELEASE.jar:"$REPO"/org/springframework/spring-expression/5.0.9.RELEASE/spring-expression-5.0.9.RELEASE.jar:"$REPO"/org/springframework/spring-tx/5.0.9.RELEASE/spring-tx-5.0.9.RELEASE.jar:"$REPO"/org/springframework/spring-beans/5.0.9.RELEASE/spring-beans-5.0.9.RELEASE.jar:"$REPO"/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:"$REPO"/org/springframework/spring-aspects/5.0.9.RELEASE/spring-aspects-5.0.9.RELEASE.jar:"$REPO"/org/postgresql/postgresql/42.2.5/postgresql-42.2.5.jar:"$REPO"/com/h2database/h2/1.4.197/h2-1.4.197.jar:"$REPO"/org/glassfish/javax.json/1.1.4/javax.json-1.1.4.jar:"$REPO"/org/json/json/20180813/json-20180813.jar:"$REPO"/org/springframework/boot/spring-boot-starter-amqp/2.0.5.RELEASE/spring-boot-starter-amqp-2.0.5.RELEASE.jar:"$REPO"/org/springframework/spring-messaging/5.0.9.RELEASE/spring-messaging-5.0.9.RELEASE.jar:"$REPO"/org/springframework/amqp/spring-rabbit/2.0.6.RELEASE/spring-rabbit-2.0.6.RELEASE.jar:"$REPO"/org/springframework/amqp/spring-amqp/2.0.6.RELEASE/spring-amqp-2.0.6.RELEASE.jar:"$REPO"/org/springframework/retry/spring-retry/1.2.2.RELEASE/spring-retry-1.2.2.RELEASE.jar:"$REPO"/com/rabbitmq/amqp-client/5.4.1/amqp-client-5.4.1.jar:"$REPO"/org/springframework/spring-web/5.0.9.RELEASE/spring-web-5.0.9.RELEASE.jar:"$REPO"/com/bat/petra/worker/0.0.1-SNAPSHOT/worker-0.0.1-SNAPSHOT.jar
EXTRA_JVM_ARGUMENTS=""

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
  [ -n "$CLASSPATH" ] && CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
  [ -n "$JAVA_HOME" ] && JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
  [ -n "$HOME" ] && HOME=`cygpath --path --windows "$HOME"`
  [ -n "$BASEDIR" ] && BASEDIR=`cygpath --path --windows "$BASEDIR"`
  [ -n "$REPO" ] && REPO=`cygpath --path --windows "$REPO"`
fi

exec "$JAVACMD" $JAVA_OPTS \
  $EXTRA_JVM_ARGUMENTS \
  -classpath "$CLASSPATH" \
  -Dapp.name="worker" \
  -Dapp.pid="$$" \
  -Dapp.repo="$REPO" \
  -Dbasedir="$BASEDIR" \
  com.bat.petra.data.WorkerApplication \
  "$@"
